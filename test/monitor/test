#!/usr/bin/env python3
#$#HEADER-START
# vim:set expandtab ts=4 sw=4 ai ft=python:
#
#     Reflex Configuration Event Engine
#
#     Copyright (C) 2016 Brandon Gillespie
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU Affero General Public License as published
#     by the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU Affero General Public License for more details.
#
#     You should have received a copy of the GNU Affero General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#$#HEADER-END

# common includes
import sys
import os
import argparse
import doctest
import subprocess
from subprocess import *
import hashlib
import shutil
import json
import re
import base64
import io

rfx_base = "../../src"
sys.path.append(rfx_base + '/lib')

import rfx
import rfxmon
from rfx.test import *
from rfx.backend import Engine

################################################################################
def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", action='append')
    parser.add_argument("--nolint", action='store_true')
    parser.add_argument("--nounit", action='store_true')

    if os.path.exists("test.log"):
        os.unlink("test.log")

    args = parser.parse_args()
    base = rfx.Base(debug=args.debug).cfg_load()
    base.timestamp = False # so our output is not altered by timestamps
    base.term_width = 80
    base.notifyfd = io.StringIO()
    base.outputfd = io.StringIO()

    tap = TAP()

    if not args.nolint:
        tap.lint(rfx_base, "rfxmon", exit_on_fail=True)

    if not args.nounit:
        tap.inline_unit(rfxmon, exit_on_fail=True)

    ###########################################################################
    # how to do functional testing?

    tap.exit()

################################################################################
if __name__ == "__main__":
    main()

