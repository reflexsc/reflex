#!/usr/bin/env python3
#$#HEADER-START
# vim:set expandtab ts=4 sw=4 ai ft=python:
#
#     Reflex Configuration Event Engine
#
#     Copyright (C) 2016 Brandon Gillespie
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU Affero General Public License as published
#     by the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU Affero General Public License for more details.
#
#     You should have received a copy of the GNU Affero General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#$#HEADER-END

# common includes
import sys
import os
import argparse
import doctest
import subprocess
from subprocess import *
import hashlib
import shutil

# prep for where the reflex bits are at
reflex_cmd = 'test'
reflex_base = "../../"
reflex_lib = reflex_base + "src/"
sys.path.append(reflex_base + '/src')

import rfx
from rfx.test import *

################################################################################
def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", action='append')

    if os.path.exists("test.log"):
        os.unlink("test.log")

    args = parser.parse_args()
    b = rfx.Base(debug=args.debug).cfg_load()

    tap = TAP()
    tap.lint(reflex_lib, "rfx", exit_on_fail=True)
    tap.inline_unit(rfx, exit_on_fail=True)
    tap.exit()

################################################################################
if __name__ == "__main__":
    main()
