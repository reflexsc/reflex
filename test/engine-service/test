#!/bin/bash
# vim:set ts=4 sw=4 ft=bash:

unset REFLEX_URL
unset REFLEX_APIKEY
export PYTHONUNBUFFERED=true

declare -a test_opts
did=0
do_all() {
    DO_LINT=yes
    DO_UNIT=yes
    DO_INTEGRATION=no
    DO_FUNCTIONAL=yes
    DO_STACK=yes
    SERVICE=yes
}

for opt in "$@"; do
    case $opt in
        -*) test_opts[${#test_opts[*]}]=$opt;;
        lint)
            DO_LINT=yes
            let did++;;
        unit)
            DO_UNIT=yes
            let did++;;
        int|integration)
            DO_INTEGRATION=yes
            SERVICE=yes
            let did++;;
        func|functional)
            DO_FUNCTIONAL=yes
            SERVICE=yes
            let did++;;
        stack|full-stack)
            DO_STACK=yes
            SERVICE=yes
            let did++;;
        all)
            do_all
            let did++;;
    esac
done

msg() {
    echo "--- $@"
}

if [ $did -eq 0 ]; then
    do_all
fi

[ ! $TESTROOT ] && export TESTROOT=../

if [ ! -f $TESTROOT/../.pkg/did_engine ]; then
    echo "Skipping Reflex Engine checks (not configured with --engine)"
    exit 0
fi
source $TESTROOT/test.sh
rm -f $testlog trace log_failed engine.log

port=54321
dbname=rfxtst
dbuser=root
config='
{
 "heartbeat": 10,
 "requestid": true,
 "server": {
   "route_base": "/api",
   "port": '$port',
   "host": "127.0.0.1"
 },
 "cache": {
   "housekeeper": 2,
   "policies": 1
 },
 "db": {
    "database": "'$dbname'",
    "user": "'$dbuser'"
 },
 "crypto": {
    "000": {
      "key": "'$(dd if=/dev/urandom bs=32 count=1|base64 -w0)'",
      "default": true
    }
 }
}
'

start_svc() {
    if [ $SERVICE ]; then
        echo "drop database $dbname;" | mysql -u $dbuser >/dev/null 2>&1
        echo "create database $dbname;" | mysql -u $dbuser
        export REFLEX_ENGINE_CONFIG="$config"
        if ! which reflex-engine; then
            echo "Cannot find reflex-engine executable"
            exit 1
        fi
        reflex-engine --test --debug=abac >engine.log 2>&1 &
        trap "kill_matching reflex-$name; exit 1" 0 15
    fi
    waitfor_svc engine localhost:$port
}

errs=0
[ $DO_LINT ] && {
    msg Lint Tests
    ./test.py lint "${test_opts[@]}"
     let errs+=$?
}

[ $DO_UNIT ] && {
    msg Unit Tests
    ./test.py unit "${test_opts[@]}"
    let errs+=$?
}

if [ $SERVICE ]; then

# integration tests are broken since they run within the code; and I broke it-BJG
#    [ $DO_INTEGRATION ] && {
#        msg Integration Tests
#        start_svc
#        ./test.py integration "${test_opts[@]}"
#        let errs+=$?
#        kill_matching reflex-engine
#    }

    [ $DO_FUNCTIONAL ] && {
        msg Functional Tests
        start_svc
        ./test.py functional "${test_opts[@]}"
        let errs+=$?
        kill_matching reflex-engine
    }

    [ $DO_STACK ] && {
        msg Stack Tests
        start_svc
        ./test.py full-stack "${test_opts[@]}"
        let errs+=$?
        kill_matching reflex-engine
    }

fi

exit $errs

